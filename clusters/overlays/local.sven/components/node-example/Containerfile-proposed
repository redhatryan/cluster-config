# Stage 1: Base image with Node.js 18 UBI minimal
FROM registry.access.redhat.com/ubi8/nodejs-18-minimal AS base

# Set working directory
WORKDIR /app

# Install necessary packages
RUN microdnf install -y tar gzip

# Copy package manager lock files
COPY package.json yarn.lock package-lock.json* pnpm-lock.yaml* ./

# REMOVE FOR NOW
# Configure npm for improved network performance
#RUN npm config set fetch-retries 5 \
#   && npm config set fetch-retry-factor 10 \
#   && npm config set fetch-retry-mintimeout 20000 \
#   && npm config set fetch-retry-maxtimeout 300000 \
#   && npm config set maxsockets 50

# Install dependencies
RUN npm ci --loglevel verbose

# Stage 2: Build the application
FROM base AS builder

# Copy application source code
COPY . .

# Disable Next.js telemetry during build
ENV NEXT_TELEMETRY_DISABLED 1

# Build the application
RUN npm run build --verbose

# Stage 3: Production image
FROM registry.access.redhat.com/ubi8/nodejs-18-minimal AS runner

# Set working directory
WORKDIR /app

# Set environment to production
ENV NODE_ENV production

# Disable Next.js telemetry during runtime
ENV NEXT_TELEMETRY_DISABLED 1

# Create a non-root user
RUN groupadd --gid 1001 nextjs \
    && useradd --uid 1001 --gid nextjs --shell /sbin/nologin --create-home nextjs

# Copy necessary files from builder stage
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# Set ownership of application files
RUN chown -R nextjs:nextjs /app

# Switch to non-root user
USER nextjs

# Expose application port
EXPOSE 3000
ENV PORT 3000

# Start the application
CMD ["node", "server.js"]
