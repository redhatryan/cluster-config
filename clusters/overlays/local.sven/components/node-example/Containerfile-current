# Stage 1: Base image with Node.js 18 UBI minimal
FROM registry.access.redhat.com/ubi8/nodejs-18 AS base

# Set working directory
WORKDIR /app

# Copy package manager lock files
COPY --chown=1001:1001 package.json yarn.lock package-lock.json* pnpm-lock.yaml* ./
COPY --chown=1001:1001 .nprmc /app/.nprmc
COPY --chown=1001:1001 .env.production /app/.env.produciton

# Install dependencies
RUN npm ci --loglevel verbose

# Stage 2: Build the application
FROM base AS builder

# Copy application source code
COPY --chown=1001:1001 --from=deps /app/node_modules ./node_modules
COPY --chown=1001:1001 . .

# Disable Next.js telemetry during build
ENV NEXT_TELEMETRY_DISABLED 1

# Elevate out of root user for npm run
USER 0

# Build the application
RUN npm run build --verbose

# [FUTURE] Stage 3: Production image
# FROM registry.access.redhat.com/ubi8/nodejs-18-minimal AS runner

# Stage 3: Production image
FROM base as runner

# Set working directory
WORKDIR /app

# Set environment to production
ENV NODE_ENV production

# Disable Next.js telemetry during runtime
ENV NEXT_TELEMETRY_DISABLED 1

# Copy necessary files from builder stage
COPY --chown=1001:1001 --from=builder /app/public ./public
COPY --chown=1001:1001 --from=builder /app/.next/standalone ./
COPY --chown=1001:1001 --from=builder /app/.next/static ./.next/static

# Set ownership of application files
RUN chown -R nextjs:nextjs /app

# Switch to non-root user
USER nextjs

# Expose application port
EXPOSE 3000
ENV PORT 3000

# Start the application
CMD ["node", "server.js"]
