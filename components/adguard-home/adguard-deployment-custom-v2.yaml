apiVersion: apps/v1
kind: Deployment
metadata:
  name: adguard-deployment
  namespace: adguard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adguard
  template:
    metadata:
      labels:
        app: adguard
    spec:
      initContainers:
      - name: copy-configmap
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
           - "sh"
           - "-c"
           - |
             if [ ! -f /opt/adguardhome/conf/AdGuardHome.yaml ]; then
               mkdir -p /opt/adguardhome/conf
               cp /AdGuardHome.yaml /opt/adguardhome/conf/AdGuardHome.yaml
             fi
         volumeMounts:
          - name: adguardhome-yaml
             mountPath: /AdGuardHome.yaml
             subPath: AdGuardHome.yaml
          - name: adguard-conf
            mountPath: /opt/adguardhome/conf
         securityContext:
           runAsUser: 0
      containers:
      - name: adguard-home
        image: adguard/adguardhome:latest
        env:
          - name: AGH_CONFIG
            valueFrom:
              configMapKeyRef:
                name: adguard-config
                key: AdGuardHome.yaml
        ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 3000
            name: http-initial
          - containerPort: 8080
            name: http
            protocol: TCP
        volumeMounts:
          - name: adguard-data
            mountPath: /opt/adguardhome/work
      volumes:
      - name: adguard-data
        persistentVolumeClaim:
          claimName: adguard-pvc
      - name: adguard-conf
        persistentVolumeClaim: # if you need persistent storage for the config
          claimName: adguard-config-pvc
      - name: adguardhome-yaml
        configMap:
          name: adguard-config
          items:
          - key: AdGuardHome.yaml
            path: AdGuardHome.yaml

